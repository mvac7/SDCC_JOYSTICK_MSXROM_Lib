SDCC MSX ROM Joystick Functions Library (object type)
Version: 1.2
Author: mvac7/303bcn
Architecture: MSX
Format: C Object (SDCC .rel)
Programming language: C
WEB: 
mail: mvac7303b@gmail.com
Doc version: 1.0


History of versions:
- v1.2 (11/03/2018) current version
- v1.1 (03/03/2017) 
- v1.0 (01/02/2016)

Document changes:
- v1.0   (11/3/2018) Initial version.


 
>>> Warning!: Document pending correction. <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


--------------------------------------------------------------------------------
Index:

1 Introduction
2 Acknowledgments.
3 Requirements
4 Constants
  4.1 Joystick type
  4.2 Joystick state
  4.3 Trigger type
  4.4 Trigger state
5 Functions
  5.1 STICK
  5.2 STRIG 
                       


--------------------------------------------------------------------------------
1 Introduction:

This project is an Opensource library with functions to access to joysticks or 
keyboard cursors keys.

It uses the functions from the MSX BIOS, so it is designed to create 
applications in ROM format.
  
Use them for developing MSX applications using Small Device C Compiler (SDCC) 
compilator.

Includes two applications for test and learning purposes.
                           


--------------------------------------------------------------------------------
2 Acknowledgments
  
  Thanks for Info & help, to:

  Avelino Herrera > http://msx.atlantes.org/index_es.html
  Nerlaska > http://albertodehoyonebot.blogspot.com.es
  Fubu > http://www.gamerachan.org/fubu/
  Marq/Lieves!Tuore > http://www.kameli.net/lt/
  Sapphire/Z80ST > http://z80st.auic.es/
  Pentacour > http://pentacour.com/
  JamQue/TPM > http://www.thepetsmode.com/
  Andrear > http://andrear.altervista.org/home/msxsoftware.php
  Konamiman > https://www.konamiman.com
  MSX Assembly Page > http://map.grauw.nl/resources/msxbios.php
  Portar MSX Tech Doc > http://nocash.emubase.de/portar.htm
  MSX Resource Center > http://www.msx.org/
  Karoshi MSX Community > http://karoshi.auic.es/
  BlueMSX >> http://www.bluemsx.com/
  OpenMSX >> http://openmsx.sourceforge.net/
  Meisei  >> ?



--------------------------------------------------------------------------------
3 Requirements:

 * Small Device C Compiler (SDCC) v3.6 
   http://sdcc.sourceforge.net/
     
 * Hex2bin v2.2 
   http://hex2bin.sourceforge.net/
   
   

--------------------------------------------------------------------------------
4 Constants


4.1 Joystick type
 
 *  CURSORKEYS  0
 *  JOYA        1
 *  JOYB        2


4.2 Joystick state

 *  INACTIVE    0
 *  UP          1
 *  UP_RIGHT    2
 *  RIGHT       3
 *  DOWN_RIGHT  4
 *  DOWN        5
 *  DOWN_LEFT   6
 *  LEFT        7
 *  UP_LEFT     8


4.3 Trigger type

 *  SPACEBAR       0
 *  JOYA_BUTTONA   1
 *  JOYB_BUTTONA   2
 *  JOYA_BUTTONB   3
 *  JOYB_BUTTONB   4


4.4 Trigger state

 *  UNPRESSED   0
 *  PRESSED    -1



--------------------------------------------------------------------------------
5 Functions


================================================================================
5.1 STICK

 Function : 
            char STICK(char joy)
            
 Description:
            Returns the joystick status
            
 Input    : [char] joy port: 
                    0=cursor keys 
                    1=joystick A 
                    2=joystick B
                             
 Output   : [char] status:
                    0=inactive
                    1=up
                    2=up & right
                    3=right
                    4=down & right
                    5=down
                    6=down & left
                    7=left
                    8=up & left
                             
 Examples : 
            char A;
            A = STICK(0);
            if (A==1) UP();
            


================================================================================
5.2 STRIG 

 Function : 
            signed char STRIG(char joy)
            
 Description:
            Returns the trigger status.
            
 Input    : [char] 
                    0 - space key
                    1 - button 1 joy A
                    2 - button 1 joy B
                    3 - button 2 joy A
                    4 - button 2 joy B
                    
 Output   : [char] status: 
                    0 = inactive
                   -1 = when the space key or the joystick/mouse button is 
                        pressed down 
 
 Examples :              
            signed char Action;
            Action = STRIG(0);            
            if (Action<0) Fire();
            
            signed char Action;
            Action = STRIG(0);
            if (Action==UNPRESSED) Action = STRIG(1);
            if (Action==PRESSED) Fire();


--------------------------------------------------------------------------------

  